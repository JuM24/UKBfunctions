% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prep_train_mm.R
\name{prep_train_mm}
\alias{prep_train_mm}
\title{Combines training preparation and training itself into a single function. To
be used with multimorbidity predictors.}
\usage{
prep_train_mm(
  input_file_path = "",
  output_file_path = "",
  extra_suffix,
  mm_source,
  target_var,
  max_followup,
  min_age,
  imbalance_correct,
  balance_prop,
  ordinals,
  smote_k,
  train_algorithm,
  train_metric,
  train_cv_folds,
  train_tune_len,
  train_distribute_cores,
  train_core_number,
  verbose,
  random_seed
)
}
\arguments{
\item{input_file_path}{The directory name from which to load the input file.}

\item{output_file_path}{The directory name into which the output file
is to be saved.}

\item{extra_suffix}{An optional extra suffix to be added to the output file;
by default, the MM source and target variable are already in the name to
prevent accidental overwrites during export.}

\item{mm_source}{The source of disease history.}

\item{target_var}{The target variable to be predicted.}

\item{max_followup}{The time within which the outcome that is to be
predicted should occur. If not set to \code{NULL}, the input data frame must
contain a column called 'followup' which is the time in years between baseline
and right-censoring or event occurrence, whichever occurs first.}

\item{min_age}{The minimum age of the sample. Determines whether participants
below a certain age should be dropped prior to training.}

\item{imbalance_correct}{The desired proportion of the total for the
current minority class. 0.5 will completely balance the classes.}

\item{balance_prop}{The desired proportion of the total for the
current minority class. 0.5 will completely balance the classes.}

\item{ordinals}{Relevant for SMOTE. A list of column names indicating
the ordinal variables in the data frame. All character/factor columns
not included in this list will be considered as nominal variables, and
all numerical variables as numerical.}

\item{train_algorithm}{The algorithm to be used for prediction.}

\item{train_metric}{Which metric to optimise on. Available options are
"Accuracy", "Kappa", "ROC", "Sens", and "Spec".}

\item{train_cv_folds}{The number of folds to be used during cross-validation;
corresponds to the argument \code{number} in \code{caret::trainControl}.}

\item{train_tune_len}{The length of the tuning grid; corresponds to the
\code{tuneLength} argument of \code{caret::train}.}

\item{train_distribute_cores}{Whether cross-validation should be performed in
parallel.}

\item{train_core_number}{Relevant only if \code{distribute_cores = TRUE}. The number of
cores to be used in parallel processing.}

\item{verbose}{Whether to print progress to console.}

\item{random_seed}{Random seed for imbalance correction and cross-validation.}

\item{smote_K}{Relevant for SMOTE. The number of nearest neighbours for KNN.}
}
\description{
\code{prep_train_mm} Takes the path to the R object that resulted from the
pipeline ending with the \code{train_test_separation} function, prepares the
data for training using \code{prep_to_train} and trains using \code{train_mm}.
}
